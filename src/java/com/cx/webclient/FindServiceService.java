
package com.cx.webclient;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "FindServiceService", targetNamespace = "http://webservice.cx.com/", wsdlLocation = "http://0.0.0.0:9009/Service/FindService?wsdl")
public class FindServiceService
    extends Service
{

    private final static URL FINDSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException FINDSERVICESERVICE_EXCEPTION;
    private final static QName FINDSERVICESERVICE_QNAME = new QName("http://webservice.cx.com/", "FindServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://0.0.0.0:9009/Service/FindService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        FINDSERVICESERVICE_WSDL_LOCATION = url;
        FINDSERVICESERVICE_EXCEPTION = e;
    }

    public FindServiceService() {
        super(__getWsdlLocation(), FINDSERVICESERVICE_QNAME);
    }

    public FindServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), FINDSERVICESERVICE_QNAME, features);
    }

    public FindServiceService(URL wsdlLocation) {
        super(wsdlLocation, FINDSERVICESERVICE_QNAME);
    }

    public FindServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, FINDSERVICESERVICE_QNAME, features);
    }

    public FindServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FindServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns FindService
     */
    @WebEndpoint(name = "FindServicePort")
    public FindService getFindServicePort() {
        return super.getPort(new QName("http://webservice.cx.com/", "FindServicePort"), FindService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FindService
     */
    @WebEndpoint(name = "FindServicePort")
    public FindService getFindServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservice.cx.com/", "FindServicePort"), FindService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (FINDSERVICESERVICE_EXCEPTION!= null) {
            throw FINDSERVICESERVICE_EXCEPTION;
        }
        return FINDSERVICESERVICE_WSDL_LOCATION;
    }

}
